package com.ohgiraffers.section02.variable;

public class Application3 {

    public static void main(String[] args) { // 1번의 tap 키는 4칸의 띄어쓰기와 같다.
        /* 수업목표. 변수의 명명규칙에 대해 이해할 수 있다. */

        /* 필기.
        변수의 명명 규칙
        1. 컴파일 에러를 발생시키는 규칙
        2. 컴파일 에러를 발생시키지는 않지만, 개발자들끼리의 암묵적 규칙
         */
        /* 목차. 1. 컴파일 에러를 발생시키는 규칙 */
        /* 목차. 1-1. 동일한 범위 내에서 동일한 변수명은 가질 수 없다. */
        int age = 20; // compile error → 작성중 에러(가장 좋은 에러) , runtime error → 출력 중 에러
       // int age = 30; 동일한 변수명을 가지기 때문에 컴파일 에러가 발생한다.

        /* 목차. 1-2. 예약어는 사용이 불가능하다. */
//        int true = 20;
//        int for = 20; // 쉽게 구분하는 방법은 글자의 색이 다르다.

        /* 목차. 1-3. 변수명은 대소문자를 구분한다. */
        int AGE = 20; // 위에 age가 있지만 오류가 발생하지 않음 → 위에서 우리가 만든 age 와는 다른 녀석이다.
        int True = 30; // 예약어인 true를 사용했음에도 오류 발생하지 않음 → 예약어 true와는 다른 녀석이다.(앞에 대문자)

        /* 목차. 1-4. 변수명은 숫자로 시작할 수 없다. */
//        int 1age = 50; // 오류가 발생한 이유는 변수명 처음에 숫자로 시작됐기 때문이다.
        int age1 = 50; // 숫자를 쓸 거면 맨 앞에만 사용하지 않으면 된다.

        /* 목차. 1-5. 특수기호는 '_' (언더바) , '$' 만 사용이 가능하다 */
//        int sh@op = 20; 중간에 @ 특수 기호 때문에 오류 발생.
        int _age2 = 20;
        int $hi = 100;

        /* 목차. 2. 컴파일 에러는 발생시키지 않지만, 개발자들끼리의 규칙 !! */
        /* 목차. 2-1. 변수명의 길이는 제한이 없다. 하지만 적당히 하자. */
        int asdasdsadadasdsadadadasdadasdasdahrehre;

        /* 목차. 2-2. 변수명이 합성어 (2개 단어 합쳐진) 경우 첫 단어는 소문자,
        *            두 번째 시작 단어는 대문자로 시작한다. */

        int maxAge = 20; // Camel-Case (낙타봉 표기법)
        int minAge = 10;
        String user_name = "김규남"; // java에서는 하지 않는다. 언더바(_) 는 파이썬에만 국한.
        String userName = "김규남"; // 이게 java에서 옳바른 표기법이다.

        /* 목차. 2-3. 변수명을 한글로 지어도 에러는 없다. 하지만 권장하지 않는다. */
        int 나이 = 10;

        /* 목차. 2-4. 변수 안에 저장된 값이 어떤 의미를 가지는 지 명확히 표현하자.!!! */
        String s = "김규남";
        String name = "김규남";

        /* 목차. 2-5. 전형적인 변수 이름이 있다면, 가급적 사용하자, */
        int sum = 0;
        int max = 100;
        int min = -10;
        int cnt = 1;


        /* 목차. 2-6. 되도록 명사형으로 작성하면 좋다. */
        String goHome;
        String home; // ← 이렇게 써라~

        /* 목차. 2-7. boolean 형들은 가급적이면 의문문으로 긍정 형태로 작성한다. */
        boolean isDead = false; // 너 죽었니? 라는 질문은 안 좋다.
        boolean isAlice = true; // 너 살았니? , 답변 : true 이런 식으로 작성


    }
}
